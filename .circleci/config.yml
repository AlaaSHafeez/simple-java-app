
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  build-and-push:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $USER
          password: $PASSWORD      
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build
          # command: mvn -B -DskipTests clean package
          command: |     
           docker build -t alaa24/java-app:1.0 .

      - run:
          name: push
          command: |
           echo $PASSWORD | docker login --username $USER --password-stdin
           docker push alaa24/java-app:1.0
  
  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name: 
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.25.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get svc
          name: Test cluster

  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-profile: << parameters.aws-profile >>
          aws-region: << parameters.aws-region >>
          # cluster-context-alias: << parameters.cluster-context-alias >>
          # cluster-authentication-role-arn: << parameters.cluster-authentication-role-arn >>
          # kubeconfig-file-path: << parameters.kubeconfig-file-path >>
          # verbose: << parameters.verbose >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/deployment.yaml
          resource-name: deployment/microservice-deployment

workflows:
  # build: 
  #   jobs:
  #     - build-and-push

  deployment:
    jobs:
      # - aws-eks/create-cluster:
      #     cluster-name: my-eks-demo
      # - test-cluster:
      #     cluster-name: my-eks-demo
      #     requires:
      #       - aws-eks/create-cluster
      - create-deployment:
          cluster-name: my-eks-demo
          aws-profile: default
          aws-region: us-west-2
          
          # requires:
          #   - aws-eks/create-cluster

      - aws-eks/update-container-image:
          cluster-name: my-eks-demo
          container-image-updates: 'alaa24/java-app:1.0'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: microservice-deployment
                resource-types: deployment
                wait: true
          requires:
            - create-deployment
          resource-name: deployment/microservice-deployment

      - aws-eks/delete-cluster:
          cluster-name: my-eks-demo
          # requires:
          #   - test-cluster
